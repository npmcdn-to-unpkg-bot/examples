<html>
<head>
<script type="text/javascript" src="/home/slavian/temp/chartjs/Chart.js"></script>
<script type="text/javascript" src="/home/slavian/S/git/examples/cement/src/main/webapp/WEB-INF/resources/ResizeSensor.js"></script>
</head>

<body>
<p>Chart</p>
<hr/>

<p id="demo">Demo</p>
<p id="demo2">
This is a veeeery long paragraph. This is a veeeery long paragraph. This is a veeeery long paragraph. This is a veeeery long paragraph. This is a veeeery long paragraph. 
This is a veeeery long paragraph. This is a veeeery long paragraph. This is a veeeery long paragraph. This is a veeeery long paragraph. This is a veeeery long paragraph. 
This is a veeeery long paragraph. This is a veeeery long paragraph. This is a veeeery long paragraph. This is a veeeery long paragraph. This is a veeeery long paragraph. 
</p>

<canvas id='myChart' style="width: 800px; height: 600px;">
</canvas>
<div id="canvasDiv" style="width: 600px; height: 655px; resize: both; overflow: auto;">
</div>

<script type='text/javascript'>
	(function () {
	var ctx = document.getElementById('myChart').getContext('2d');
	var data = {
		labels: [0.0,0.063,0.125,0.25,0.5,1.0,2.0,4.0,5.6,8.0,11.2,16.0,20.0,22.4,25.0,31.5],
		datasets: [
			{
				fillColor : 'rgba(255, 90, 0, 0)',
				strokeColor : 'rgba(255, 90, 0, 1)',
				pointColor : 'rgba(255, 90, 0, 0)',
				pointStrokeColor : 'rgba(255, 255, 255, 0)',
				data : [0.0,0.0,1.0,2.0,5.0,8.0,14.0,23.0,30.0,38.0,48.0,62.0,71.0,80.0,88.0,100.0]
			},
			{
				fillColor : 'rgba(255, 90, 0, 0)',
				strokeColor : 'rgba(255, 90, 0, 1)',
				pointColor : 'rgba(255, 90, 0, 0)',
				pointStrokeColor : 'rgba(255, 255, 255, 0)',
				data : [0.0,4.0,8.0,15.0,28.4,42.0,53.0,65.0,72.0,77.0,83.0,90.0,93.0,96.0,98.0,100.0]
			},
			{
				fillColor : 'rgba(255, 90, 0, 0)',
				strokeColor : 'rgba(255, 25, 0, 1)',
				pointColor : 'rgba(255, 90, 0, 0)',
				pointStrokeColor : 'rgba(255, 255, 255, 0)',
				data : [0.0,2.0,4.0,9.0,18.0,25.0,35.0,45.0,52.0,59.0,69.0,80.0,86.0,90.0,94.0,100.0]
			}
		]};
	var options = {
		animation : false,
		showTooltips: false,
		responsive: true,
		maintainAspectRatio: false,
		datasetStrokeWidth: 2,
		datasetStroke: false,
		datasetFill: true
	};
	//var chartBikers = new Chart(ctx).Line(data,options);

var data = {
	labels: [0.0,0.063,0.125, 0.25,0.5,1.0, 2.0],
    //labels: ["January", "February", "March", "April", "May", "June", "July"],
    datasets: [
        {
            label: "My First dataset",
            fillColor: "rgba(220,220,220,0.2)",
            strokeColor: "rgba(220,220,220,1)",
            pointColor: "rgba(220,220,220,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(220,220,220,1)",
			//data : [0.0,30.0,38.0, 48.0,62.0,71.0, 100.0]
            data: [65, 59, 80, 81, 56, 55, 40]
        },
        {
            label: "My Second dataset",
            fillColor: "rgba(151,187,205,0.2)",
            strokeColor: "rgba(151,187,205,1)",
            pointColor: "rgba(151,187,205,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(151,187,205,1)",
            data: [28, 48, 40, 19, 86, 27, 90]
        }
    ]
};
var opts = {

    ///Boolean - Whether grid lines are shown across the chart
    scaleShowGridLines : true,

    //String - Colour of the grid lines
    scaleGridLineColor : "rgba(0,0,0,.05)",

    //Number - Width of the grid lines
    scaleGridLineWidth : 1,

    //Boolean - Whether the line is curved between points
    bezierCurve : true,

    //Number - Tension of the bezier curve between points
    bezierCurveTension : 0.4,

    //Boolean - Whether to show a dot for each point
    pointDot : true,

    //Number - Radius of each point dot in pixels
    pointDotRadius : 4,

    //Number - Pixel width of point dot stroke
    pointDotStrokeWidth : 1,

    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
    pointHitDetectionRadius : 20,

    //Boolean - Whether to show a stroke for datasets
    datasetStroke : true,

    //Number - Pixel width of dataset stroke
    datasetStrokeWidth : 2,

    //Boolean - Whether to fill the dataset with a colour
    datasetFill : true,

    //String - A legend template
    legendTemplate : "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"

};
new Chart(ctx).Line(data, opts);
	
	
	
	
	
	
	//new ResizeSensor(document.getElementById('canvasDiv'), myOnResize);
	
	function myOnResize() {
		var d = document.getElementById('canvasDiv');
		var w = d.offsetWidth;
		var h = d.offsetHeight;
		var txt = "Window size: width=" + w + ", height=" + h;
		document.getElementById("demo").innerHTML = txt;
		var comp = document.getElementById("demo2");
		var comp = document.getElementById('myChart');
		comp.style.width = w;
		comp.style.height = h - 55;
		
		var ctx = comp.getContext('2d');
		//ctx.canvas.width = w;
		//ctx.canvas.height = h-55;
	}
	})();
	//document.getElementById('canvasDiv').addEventListener("resize", myOnResize);
</script>

<hr/>

</body>
</html>